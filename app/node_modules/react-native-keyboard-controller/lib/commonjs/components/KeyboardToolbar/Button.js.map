{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_useColorScheme","_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","ButtonIOS","children","onPress","disabled","accessibilityLabel","accessibilityHint","testID","style","Container","View","TouchableOpacity","accessibilityState","useMemo","createElement","accessibilityRole","ButtonAndroid","rippleRadius","theme","colorScheme","useColorScheme","ripple","TouchableNativeFeedback","Ripple","background","_default","exports","Platform","select","android"],"sources":["Button.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport {\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\n\nimport useColorScheme from \"../hooks/useColorScheme\";\n\nimport type { KeyboardToolbarTheme } from \"./types\";\nimport type { PropsWithChildren } from \"react\";\nimport type { ViewStyle } from \"react-native\";\n\ntype ButtonProps = {\n  disabled?: boolean;\n  onPress: () => void;\n  accessibilityLabel: string;\n  accessibilityHint: string;\n  testID: string;\n  rippleRadius?: number;\n  style?: ViewStyle;\n  theme: KeyboardToolbarTheme;\n};\n\nconst ButtonIOS = ({\n  children,\n  onPress,\n  disabled,\n  accessibilityLabel,\n  accessibilityHint,\n  testID,\n  style,\n}: PropsWithChildren<ButtonProps>) => {\n  // immediately switch to plain view to avoid animation flickering\n  // when fade out animation happens and view becomes disabled\n  const Container = disabled\n    ? (View as unknown as typeof TouchableOpacity)\n    : TouchableOpacity;\n  const accessibilityState = useMemo(() => ({ disabled }), [disabled]);\n\n  return (\n    <Container\n      accessibilityState={accessibilityState}\n      accessibilityRole=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      accessibilityHint={accessibilityHint}\n      onPress={onPress}\n      style={style}\n      testID={testID}\n    >\n      {children}\n    </Container>\n  );\n};\nconst ButtonAndroid = ({\n  children,\n  onPress,\n  disabled,\n  accessibilityLabel,\n  accessibilityHint,\n  testID,\n  rippleRadius = 18,\n  style,\n  theme,\n}: PropsWithChildren<ButtonProps>) => {\n  const colorScheme = useColorScheme();\n  const accessibilityState = useMemo(() => ({ disabled }), [disabled]);\n  const ripple = useMemo(\n    () =>\n      TouchableNativeFeedback.Ripple(\n        theme[colorScheme].ripple,\n        true,\n        rippleRadius,\n      ),\n    [colorScheme, rippleRadius, theme],\n  );\n\n  return (\n    <TouchableNativeFeedback\n      accessibilityState={accessibilityState}\n      accessibilityRole=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      accessibilityHint={accessibilityHint}\n      onPress={onPress}\n      background={ripple}\n      testID={testID}\n      style={style}\n    >\n      <View style={style}>{children}</View>\n    </TouchableNativeFeedback>\n  );\n};\n\nexport default Platform.select({\n  android: ButtonAndroid,\n  default: ButtonIOS,\n});\n"],"mappings":"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","ignoreList":[]}