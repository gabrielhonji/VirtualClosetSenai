{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","StyleSheet","Text","View","FocusedInputEvents","KeyboardStickyView","KeyboardController","useColorScheme","Arrow","Button","colors","TEST_ID_KEYBOARD_TOOLBAR","TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS","TEST_ID_KEYBOARD_TOOLBAR_NEXT","TEST_ID_KEYBOARD_TOOLBAR_CONTENT","TEST_ID_KEYBOARD_TOOLBAR_DONE","KEYBOARD_TOOLBAR_HEIGHT","DEFAULT_OPACITY","offset","closed","dismissKeyboard","dismiss","goToNextField","setFocusTo","goToPrevField","KeyboardToolbar","content","theme","doneText","button","icon","showArrows","onNextCallback","onPrevCallback","onDoneCallback","blur","opacity","colorScheme","inputs","setInputs","current","count","isPrevDisabled","isNextDisabled","subscription","addListener","e","remove","doneStyle","styles","doneButton","color","primary","toolbarStyle","toolbar","backgroundColor","background","ButtonContainer","IconContainer","onPressNext","onPressPrev","onPressDone","createElement","style","testID","Fragment","accessibilityLabel","accessibilityHint","disabled","onPress","type","flex","rippleRadius","doneButtonContainer","maxFontSizeMultiplier","create","position","bottom","alignItems","width","flexDirection","height","paddingHorizontal","fontWeight","fontSize","marginRight","DefaultKeyboardToolbarTheme"],"sources":["index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport {\n  FocusedInputEvents,\n  KeyboardStickyView,\n} from \"react-native-keyboard-controller\";\n\nimport { KeyboardController } from \"../../bindings\";\nimport useColorScheme from \"../hooks/useColorScheme\";\n\nimport Arrow from \"./Arrow\";\nimport Button from \"./Button\";\nimport { colors } from \"./colors\";\n\nimport type { HEX, KeyboardToolbarTheme } from \"./types\";\nimport type { ReactNode } from \"react\";\n\nexport type KeyboardToolbarProps = {\n  /** An element that is shown in the middle of the toolbar. */\n  content?: JSX.Element | null;\n  /** A set of dark/light colors consumed by toolbar component. */\n  theme?: KeyboardToolbarTheme;\n  /** Custom text for done button. */\n  doneText?: ReactNode;\n  /** Custom touchable component for toolbar (used for prev/next/done buttons). */\n  button?: typeof Button;\n  /** Custom icon component used to display next/prev buttons. */\n  icon?: typeof Arrow;\n  /**\n   * Whether to show next and previous buttons. Can be useful to set it to `false` if you have only one input\n   * and want to show only `Done` button. Default to `true`.\n   */\n  showArrows?: boolean;\n  /**\n   * A callback that is called when the user presses the next button along with the default action.\n   */\n  onNextCallback?: () => void;\n  /**\n   * A callback that is called when the user presses the previous button along with the default action.\n   */\n  onPrevCallback?: () => void;\n  /**\n   * A callback that is called when the user presses the done button along with the default action.\n   */\n  onDoneCallback?: () => void;\n  /**\n   * A component that applies blur effect to the toolbar.\n   */\n  blur?: JSX.Element | null;\n  /**\n   * A value for container opacity in hexadecimal format (e.g. `ff`). Default value is `ff`.\n   */\n  opacity?: HEX;\n};\nconst TEST_ID_KEYBOARD_TOOLBAR = \"keyboard.toolbar\";\nconst TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS = `${TEST_ID_KEYBOARD_TOOLBAR}.previous`;\nconst TEST_ID_KEYBOARD_TOOLBAR_NEXT = `${TEST_ID_KEYBOARD_TOOLBAR}.next`;\nconst TEST_ID_KEYBOARD_TOOLBAR_CONTENT = `${TEST_ID_KEYBOARD_TOOLBAR}.content`;\nconst TEST_ID_KEYBOARD_TOOLBAR_DONE = `${TEST_ID_KEYBOARD_TOOLBAR}.done`;\n\nconst KEYBOARD_TOOLBAR_HEIGHT = 42;\nconst DEFAULT_OPACITY: HEX = \"FF\";\nconst offset = { closed: KEYBOARD_TOOLBAR_HEIGHT };\n\nconst dismissKeyboard = () => KeyboardController.dismiss();\nconst goToNextField = () => KeyboardController.setFocusTo(\"next\");\nconst goToPrevField = () => KeyboardController.setFocusTo(\"prev\");\n\n/**\n * `KeyboardToolbar` is a component that is shown above the keyboard with `Prev`/`Next` and\n * `Done` buttons.\n */\nconst KeyboardToolbar: React.FC<KeyboardToolbarProps> = ({\n  content,\n  theme = colors,\n  doneText,\n  button,\n  icon,\n  showArrows = true,\n  onNextCallback,\n  onPrevCallback,\n  onDoneCallback,\n  blur = null,\n  opacity = DEFAULT_OPACITY,\n}) => {\n  const colorScheme = useColorScheme();\n  const [inputs, setInputs] = useState({\n    current: 0,\n    count: 0,\n  });\n  const isPrevDisabled = inputs.current === 0;\n  const isNextDisabled = inputs.current === inputs.count - 1;\n\n  useEffect(() => {\n    const subscription = FocusedInputEvents.addListener(\"focusDidSet\", (e) => {\n      setInputs(e);\n    });\n\n    return subscription.remove;\n  }, []);\n  const doneStyle = useMemo(\n    () => [styles.doneButton, { color: theme[colorScheme].primary }],\n    [colorScheme, theme],\n  );\n  const toolbarStyle = useMemo(\n    () => [\n      styles.toolbar,\n      {\n        backgroundColor: `${theme[colorScheme].background}${opacity}`,\n      },\n    ],\n    [colorScheme, opacity, theme],\n  );\n  const ButtonContainer = button || Button;\n  const IconContainer = icon || Arrow;\n\n  const onPressNext = useCallback(() => {\n    goToNextField();\n    onNextCallback?.();\n  }, [onNextCallback]);\n  const onPressPrev = useCallback(() => {\n    goToPrevField();\n    onPrevCallback?.();\n  }, [onPrevCallback]);\n  const onPressDone = useCallback(() => {\n    dismissKeyboard();\n    onDoneCallback?.();\n  }, [onDoneCallback]);\n\n  return (\n    <KeyboardStickyView offset={offset}>\n      <View style={toolbarStyle} testID={TEST_ID_KEYBOARD_TOOLBAR}>\n        {blur}\n        {showArrows && (\n          <>\n            <ButtonContainer\n              accessibilityLabel=\"Previous\"\n              accessibilityHint=\"Will move focus to previous field\"\n              disabled={isPrevDisabled}\n              onPress={onPressPrev}\n              testID={TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS}\n              theme={theme}\n            >\n              <IconContainer\n                disabled={isPrevDisabled}\n                type=\"prev\"\n                theme={theme}\n              />\n            </ButtonContainer>\n            <ButtonContainer\n              accessibilityLabel=\"Next\"\n              accessibilityHint=\"Will move focus to next field\"\n              disabled={isNextDisabled}\n              onPress={onPressNext}\n              testID={TEST_ID_KEYBOARD_TOOLBAR_NEXT}\n              theme={theme}\n            >\n              <IconContainer\n                disabled={isNextDisabled}\n                type=\"next\"\n                theme={theme}\n              />\n            </ButtonContainer>\n          </>\n        )}\n\n        <View style={styles.flex} testID={TEST_ID_KEYBOARD_TOOLBAR_CONTENT}>\n          {content}\n        </View>\n        <ButtonContainer\n          accessibilityLabel=\"Done\"\n          accessibilityHint=\"Will close the keyboard\"\n          onPress={onPressDone}\n          testID={TEST_ID_KEYBOARD_TOOLBAR_DONE}\n          rippleRadius={28}\n          style={styles.doneButtonContainer}\n          theme={theme}\n        >\n          <Text style={doneStyle} maxFontSizeMultiplier={1.3}>\n            {doneText || \"Done\"}\n          </Text>\n        </ButtonContainer>\n      </View>\n    </KeyboardStickyView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  flex: {\n    flex: 1,\n  },\n  toolbar: {\n    position: \"absolute\",\n    bottom: 0,\n    alignItems: \"center\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    height: KEYBOARD_TOOLBAR_HEIGHT,\n    paddingHorizontal: 8,\n  },\n  doneButton: {\n    fontWeight: \"600\",\n    fontSize: 15,\n  },\n  doneButtonContainer: {\n    marginRight: 8,\n  },\n});\n\nexport { colors as DefaultKeyboardToolbarTheme };\nexport default KeyboardToolbar;\n"],"mappings":"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","ignoreList":[]}